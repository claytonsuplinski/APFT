package com.example.finalproject;

import java.util.ArrayList;

import android.content.Intent;
import android.os.Bundle;

public class Cadet {
	public enum Gender {male, female};
	
	private String name;
	private String objId;
	private int age;
	private Gender gender;
	private int pushUps;
	private int sitUps;
	private int runTime; //in seconds
	public Cadet(String name, int age, Gender gender){
		this.name = name;
		this.age = age;
		this.gender = gender;
		pushUps = 0;
		sitUps = 0;
		runTime = 0;
	}
	public Cadet(String name, int age, String gender, int p, int s, int r){
		this.name = name;
		this.age = age;
		this.gender = Gender.female;
		if(gender.equalsIgnoreCase("M")){
			this.gender = Gender.male;
		}
		pushUps = p;
		sitUps = s;
		runTime = r;
		System.out.println("Cadet made with " + name + " " + age + " " + gender + " " +p+" " +r+" "+s);
	}
	//pass data as encoding for ease of passing through 
	public Cadet(String encoding){
		//use "-" as delimeter, name-age-gender(as int)-pushups=situps-runtime-objId
		String[] split = encoding.split("-");
		name = split[0];
		age = Integer.parseInt(split[1]);
		gender = Gender.values()[Integer.parseInt(split[2])];
		pushUps = Integer.parseInt(split[3]);
		sitUps = Integer.parseInt(split[4]);
		runTime = Integer.parseInt(split[5]);
		objId = split[6];
	}
	public int getScore(){
		return getPushUpScore() + getSitUpScore() + getRunScore();
	}
	//get set methods
	public int getAge(){
		return age;
	}
	public void setAge(int age){
		this.age = age;
	}
	public String getName(){
		return name;
	}
	public void setName(String name){
		this.name = name;
	}
	public Gender getGender(){
		return gender;
	}
	public void setGender(Gender gender){
		this.gender = gender;
	}
	public int getPushUps(){
		return pushUps;
	}
	public void setPushUps(int pushUps){
		this.pushUps = pushUps;
	}
	public int getSitUps(){
		return sitUps;
	}
	public void setSitUps(int sitUps){
		this.sitUps = sitUps;
	}
	public int getRunTime(){
		return runTime;
	}
	public void setRunTime(int runTime){
		this.runTime = runTime;
	}
	public void setObjId(String id){
		this.objId = id;
	}
	public String getObjId(){
		return objId;
	}
	//get event stats
	public int getPushUpScore(){
		if(gender == Gender.male){
			return getScore(age, getPushUps(), pushupScoresMale, false);
		}
		return getScore(age, getPushUps(), pushupScoresFemale, false);
	}
	public int getSitUpScore(){
		if(gender == Gender.male){
			return getScore(age, getSitUps(), situpScoresMale, false);
		}
		return getScore(age, getSitUps(), situpScoresFemale, false);
	}
	public int getRunScore(){
		if(gender == Gender.male){
			return getScore(age, getRunTime(), runtimeScoresMale, true);
		}
		return getScore(age, getRunTime(), runtimeScoresFemale, true);
	}
	
	//output encoding
	public String toString(){
		int gend = 0;
		if(gender == Gender.female)
			gend = 1;
		return name + "-" + Integer.toString(age) + "-" + gend + "-" + Integer.toString(pushUps)
				+ "-" + Integer.toString(sitUps) + "-" + Integer.toString(runTime) + "-" + objId;
	}
	
	//static utility methods
	public static ArrayList<Cadet> formatList(String cdts){
		ArrayList<Cadet> ret = new ArrayList<Cadet>();
		String[] parsed = cdts.split(";");
		for(int i = 0; i < parsed.length; i++){
			ret.add(new Cadet(parsed[i]));
		}
		return ret;
	}
	//convert from table signature to seconds
	public static int timestampToSeconds(int t){
		String tstamp = Integer.toString(t);
		String sec = tstamp.substring(0, 2);
		String min = tstamp.substring(2);
		return Integer.parseInt(min)*60 + Integer.parseInt(sec);
	}
	//from seconds to table signature
	public static int secondsToTimestamp(int t){
		int sec = t%60;
		int min = t - sec;
		return min*100 + sec;
	}
	private static int getScore(int age, int reps, int[] table, boolean run){
		int ageIndex = -1;
		if(age <= 21){
			ageIndex = 1;
		} else if(age <= 26){
			ageIndex = 2;
		} else if(age <= 31){
			ageIndex = 3;
		} else if(age <= 36){
			ageIndex = 4;
		} else if(age <= 41){
			ageIndex = 5;
		} else if(age <= 46){
			ageIndex = 6;
		} else if(age <= 51){
			ageIndex = 7;
		} else if(age <= 56){
			ageIndex = 8;
		} else if(age <= 61){
			ageIndex = 9;
		} else{ //62+
			ageIndex = 10;
		}
		int score = 0;
		if(!run){
			score = table[11*reps + ageIndex];
		}else{ //run
			if(reps < 1300){
				score = 100;
			}else if(2455 < reps){
				score = 0;
			}else{
				int ind = -1;
				for(int i = 0; i < table.length; i+=11){
					System.out.println("fuckkkk::::::: " + table[i]);
					if(reps > table[i]){
						System.out.println("fPOOOOOOOOOP");
						ind = i;
					}
				}
				score = table[ind + ageIndex];
			}
		}
		return score;
	}
	//finds rep for associated ageindex(column) and score(row)
	private static int getRep(int ageIndex, int score, int[] table, boolean run){
		int ret = 0;
		boolean found = false;
		if(!run){
			for(int i = 0; i < (table.length); i+=11){
				if((score <= table[i + ageIndex]) && !found){
					ret = table[i];
					found = true;
				}
			}
		} else { //run
			for(int i = 0; i < table.length; i+=11){
				if((score <= table[i + ageIndex])){
					ret = table[i];
					found = true;
				}
			}
		}
		if(run){
			return timestampToSeconds(ret);
		}
		return ret;
	}
	//pushups - situps - run; min - max NOTE table widths 11
	public static ArrayList<int[]> minMaxScores(int age, Gender gender){
		ArrayList<int[]> ret = new ArrayList<int[]>();
		int ageIndex = -1;
		if(age <= 21){
			ageIndex = 1;
		} else if(age <= 26){
			ageIndex = 2;
		} else if(age <= 31){
			ageIndex = 3;
		} else if(age <= 36){
			ageIndex = 4;
		} else if(age <= 41){
			ageIndex = 5;
		} else if(age <= 46){
			ageIndex = 6;
		} else if(age <= 51){
			ageIndex = 7;
		} else if(age <= 56){
			ageIndex = 8;
		} else if(age <= 61){
			ageIndex = 9;
		} else{ //62+
			ageIndex = 10;
		}
		if(gender == Gender.male){
			ret.add(new int[]{getRep(ageIndex, 50, pushupScoresMale, false), getRep(ageIndex, 100, pushupScoresMale, false)});
			ret.add(new int[]{getRep(ageIndex, 50, situpScoresMale, false), getRep(ageIndex, 100, situpScoresMale, false)});
			ret.add(new int[]{getRep(ageIndex, 50, runtimeScoresMale, true), getRep(ageIndex, 100, runtimeScoresMale, true)});
		} else { //cdt is female
			ret.add(new int[]{getRep(ageIndex, 50, pushupScoresFemale, false), getRep(ageIndex, 100, pushupScoresFemale, false)});
			ret.add(new int[]{getRep(ageIndex, 50, situpScoresFemale, false), getRep(ageIndex, 100, situpScoresFemale, false)});
			ret.add(new int[]{getRep(ageIndex, 50, runtimeScoresFemale, true), getRep(ageIndex, 100, runtimeScoresFemale, true)});
		}
		return ret;
	}
	
	private static int[] pushupScoresMale = {
		0,0,0,0,0,0,0,0,0,0,0
		,1,0,0,0,0,0,0,0,0,0,0
		,2,0,0,0,0,0,0,0,0,0,0
		,3,0,0,0,0,0,0,0,0,0,0
		,4,0,0,0,0,0,0,0,0,0,0
		,5,9,20,24,28,30,32,36,43,45,47
		,6,10,21,25,29,31,33,38,44,46,48
		,7,12,22,26,30,32,34,39,46,47,49
		,8,13,23,27,31,33,36,40,47,49,51
		,9,14,25,28,32,34,37,41,48,50,52
		,10,16,26,29,33,35,38,42,49,51,53
		,11,17,27,31,34,36,39,44,50,52,54
		,12,19,28,32,35,37,40,45,51,53,55
		,13,20,29,33,36,38,41,46,52,54,56
		,14,21,30,34,37,39,42,47,53,55,58
		,15,23,31,35,38,41,43,48,54,57,59
		,16,24,33,36,39,42,44,49,56,58,60
		,17,26,34,37,41,43,46,51,57,59,61
		,18,27,35,38,42,44,47,52,58,60,62
		,19,28,36,39,43,45,48,53,59,61,64
		,20,30,37,40,44,46,49,54,60,62,65
		,21,31,38,41,45,47,50,55,61,63,66
		,22,32,39,42,46,48,51,56,62,65,67
		,23,34,41,43,47,49,52,58,63,66,68
		,24,35,42,44,48,50,53,59,64,67,69
		,25,37,43,45,49,51,54,60,66,68,71
		,26,38,44,46,50,52,56,61,67,69,72
		,27,39,45,47,51,53,57,62,68,70,73
		,28,41,46,48,52,54,58,64,69,71,74
		,29,42,47,49,53,55,59,65,70,73,75
		,30,43,49,50,54,56,60,66,71,74,76
		,31,45,50,52,55,57,61,67,72,75,78
		,32,46,51,53,56,58,62,68,73,76,79
		,33,48,52,54,57,59,63,69,74,77,80
		,34,49,53,55,58,60,64,71,76,78,81
		,35,50,54,56,59,61,66,72,77,79,82
		,36,52,55,57,60,62,67,73,78,81,84
		,37,53,57,58,61,63,68,74,79,82,85
		,38,54,58,59,62,64,69,75,80,83,86
		,39,56,59,60,63,65,70,76,81,84,87
		,40,57,60,61,64,66,71,78,82,85,88
		,41,59,61,62,65,67,72,79,83,86,89
		,42,60,62,63,66,68,73,80,84,87,91
		,43,61,63,64,67,69,74,81,86,89,92
		,44,63,65,65,68,70,76,82,87,90,93
		,45,64,66,66,69,71,77,84,88,91,94
		,46,66,67,67,70,72,78,85,89,92,95
		,47,67,68,68,71,73,79,86,90,93,96
		,48,68,69,69,72,74,80,87,91,94,98
		,49,70,70,71,73,75,81,88,92,95,99
		,50,71,71,72,74,76,82,89,93,97,100
		,51,72,73,73,75,77,83,91,94,98,100
		,52,74,74,74,76,78,84,92,96,99,100
		,53,75,75,75,77,79,86,93,97,100,100
		,54,77,76,76,78,81,87,94,98,100,100
		,55,78,77,77,79,82,88,95,99,100,100
		,56,79,78,78,81,83,89,96,100,100,100
		,57,81,79,79,82,84,90,98,100,100,100
		,58,82,81,80,83,85,91,99,100,100,100
		,59,83,82,81,84,86,92,100,100,100,100
		,60,85,83,82,85,87,93,100,100,100,100
		,61,86,84,83,86,88,94,100,100,100,100
		,62,88,85,84,87,89,96,100,100,100,100
		,63,89,86,85,88,90,97,100,100,100,100
		,64,90,87,86,89,91,98,100,100,100,100
		,65,92,89,87,90,92,99,100,100,100,100
		,66,93,90,88,91,93,100,100,100,100,100
		,67,94,91,89,92,94,100,100,100,100,100
		,68,96,92,91,93,95,100,100,100,100,100
		,69,97,93,92,94,96,100,100,100,100,100
		,70,99,94,93,95,97,100,100,100,100,100
		,71,100,95,94,96,98,100,100,100,100,100
		,72,100,97,95,97,99,100,100,100,100,100
		,73,100,98,96,98,100,100,100,100,100,100
		,74,100,99,97,99,100,100,100,100,100,100
		,75,100,100,98,100,100,100,100,100,100,100
		,76,100,100,99,100,100,100,100,100,100,100
		,77,100,100,100,100,100,100,100,100,100,100	
	};
	private static int[] situpScoresMale = {
		0,0,0,0,0,0,0,0,0,0,0
		,1,0,0,0,0,0,0,0,0,0,0
		,2,0,0,0,0,0,0,0,0,0,0
		,3,0,0,0,0,0,0,0,0,0,0
		,4,0,0,0,0,0,0,0,0,0,0
		,5,0,0,0,0,0,0,0,0,0,0
		,6,0,0,0,0,0,0,0,0,0,0
		,7,0,0,0,0,0,0,0,0,0,0
		,8,0,0,0,0,0,0,0,0,0,0
		,9,0,0,0,0,0,0,0,0,0,0
		,10,0,0,0,0,0,0,0,0,0,0
		,11,0,0,0,0,0,0,0,0,0,0
		,12,0,0,0,0,0,0,0,0,0,0
		,13,0,0,0,0,0,0,0,0,0,0
		,14,0,0,0,0,0,0,0,0,0,0
		,15,0,0,0,0,0,0,0,0,0,0
		,16,0,0,0,0,0,0,0,0,0,0
		,17,0,0,0,0,0,0,0,0,0,0
		,18,0,0,0,0,0,0,0,0,0,0
		,19,0,0,0,0,0,0,0,0,0,0
		,20,0,0,0,0,0,0,0,0,0,0
		,21,9,21,34,35,42,49,50,53,54,55
		,22,10,23,35,36,43,50,51,54,55,56
		,23,12,24,36,38,44,51,52,55,56,57
		,24,14,25,37,39,45,52,53,56,57,58
		,25,15,27,38,40,46,53,54,57,58,59
		,26,17,28,39,41,47,54,56,58,59,60
		,27,18,29,41,42,48,55,57,59,60,61
		,28,20,31,42,44,49,56,58,60,61,62
		,29,22,32,43,45,50,57,59,61,62,63
		,30,23,33,44,46,52,58,60,62,63,64
		,31,25,35,45,47,53,59,61,63,64,65
		,32,26,36,46,48,54,60,62,64,65,66
		,33,28,37,47,49,55,61,63,65,66,68
		,34,30,39,48,50,56,62,64,66,68,69
		,35,31,40,49,52,57,63,66,67,69,70
		,36,33,41,50,53,58,64,67,68,70,71
		,37,34,43,51,54,59,65,68,69,71,72
		,38,36,44,52,55,60,66,69,71,72,73
		,39,38,45,54,56,61,67,70,72,73,74
		,40,39,47,55,58,62,68,71,73,74,75
		,41,41,48,56,59,63,69,72,74,75,76
		,42,42,49,57,60,64,70,73,75,76,77
		,43,44,50,58,61,65,71,74,76,77,78
		,44,46,52,59,62,66,72,76,77,78,79
		,45,47,53,60,64,67,73,77,78,79,81
		,46,49,55,61,65,68,74,78,79,81,82
		,47,50,56,62,66,69,75,79,80,82,83
		,48,52,57,63,67,71,76,80,81,83,84
		,49,54,59,64,68,72,77,81,82,84,85
		,50,55,60,65,69,73,78,82,83,85,86
		,51,57,61,66,71,74,79,83,84,86,87
		,52,58,63,68,72,75,80,84,85,87,88
		,53,60,64,69,73,76,81,86,86,88,89
		,54,62,65,70,74,77,82,87,87,89,90
		,55,63,67,71,75,78,83,88,88,90,91
		,56,65,68,72,76,79,84,89,89,91,92
		,57,66,69,73,78,80,85,90,91,92,94
		,58,68,71,74,79,81,86,91,92,94,95
		,59,70,72,75,80,82,87,92,93,95,96
		,60,71,73,76,81,83,88,93,94,96,97
		,61,73,75,77,82,84,89,94,95,97,98
		,62,74,76,78,84,85,90,96,96,98,99
		,63,76,77,79,85,86,91,97,97,99,100
		,64,78,79,81,86,87,92,98,98,100,100
		,65,79,80,82,87,88,93,99,99,100,100
		,66,81,81,83,88,89,94,100,100,100,100
		,67,82,83,84,89,91,95,100,100,100,100
		,68,84,84,85,91,92,96,100,100,100,100
		,69,86,85,86,92,93,97,100,100,100,100
		,70,87,87,87,93,94,98,100,100,100,100
		,71,89,88,88,94,95,99,100,100,100,100
		,72,90,89,89,95,96,100,100,100,100,100
		,73,92,91,90,96,97,100,100,100,100,100
		,74,94,92,91,98,98,100,100,100,100,100
		,75,95,93,92,99,99,100,100,100,100,100
		,76,97,95,94,100,100,100,100,100,100,100
		,77,98,96,95,100,100,100,100,100,100,100
		,78,100,97,96,100,100,100,100,100,100,100
		,79,100,99,97,100,100,100,100,100,100,100
		,80,100,100,98,100,100,100,100,100,100,100
		,81,100,100,99,100,100,100,100,100,100,100
		,82,100,100,100,100,100,100,100,100,100,100
	};
	private static int[] runtimeScoresMale = {
		1300,100,100,100,100,100,100,100,100,100,100
		,1301,99,99,100,100,100,100,100,100,100,100
		,1307,97,98,100,100,100,100,100,100,100,100
		,1313,96,97,100,100,100,100,100,100,100,100
		,1319,94,96,99,99,100,100,100,100,100,100
		,1325,93,94,98,98,100,100,100,100,100,100
		,1331,92,93,97,97,100,100,100,100,100,100
		,1337,90,92,96,96,99,100,100,100,100,100
		,1343,89,91,95,95,98,100,100,100,100,100
		,1349,88,90,94,95,97,100,100,100,100,100
		,1355,86,89,92,94,97,100,100,100,100,100
		,1401,85,88,91,93,96,100,100,100,100,100
		,1407,83,87,90,92,95,99,100,100,100,100
		,1413,82,86,89,91,94,98,100,100,100,100
		,1419,81,84,88,90,93,97,100,100,100,100
		,1425,79,83,87,89,92,97,99,100,100,100
		,1431,78,82,86,88,91,96,98,100,100,100
		,1437,77,81,85,87,91,95,98,100,100,100
		,1443,75,80,84,86,90,94,97,99,100,100
		,1449,74,79,83,85,89,93,96,98,100,100
		,1455,72,78,82,85,88,92,95,98,100,100
		,1501,71,77,81,84,87,91,95,97,100,100
		,1507,70,76,79,83,86,90,94,96,100,100
		,1513,68,74,78,82,86,90,93,95,100,100
		,1519,67,73,77,81,85,89,92,95,99,100
		,1525,66,72,76,80,84,88,91,94,98,100
		,1531,64,71,75,79,83,87,91,93,97,100
		,1537,63,70,74,78,82,86,90,92,97,100
		,1543,61,69,73,77,81,85,89,91,96,99
		,1549,60,68,72,76,80,84,88,91,95,98
		,1555,59,67,71,75,80,83,87,90,94,97
		,1601,57,66,70,75,79,83,87,89,93,96
		,1607,56,64,69,74,78,82,86,88,92,95
		,1613,54,63,68,73,77,81,85,87,91,94
		,1619,53,62,66,72,76,80,84,87,90,93
		,1625,52,61,65,71,75,79,84,86,90,93
		,1631,50,60,64,70,74,78,83,85,89,92
		,1637,49,59,63,69,74,77,82,84,88,91
		,1643,48,58,62,68,73,77,81,84,87,90
		,1649,46,57,61,67,72,76,80,83,86,89
		,1655,45,56,60,66,71,75,80,82,85,88
		,1701,43,54,59,65,70,74,79,81,84,87
		,1707,42,53,58,65,69,73,78,80,83,86
		,1713,41,52,57,64,69,72,77,80,83,85
		,1719,39,51,56,63,68,71,76,79,82,84
		,1725,38,50,55,62,67,70,76,78,81,83
		,1731,37,49,54,61,66,70,75,77,80,82
		,1737,35,48,52,60,65,69,74,76,79,81
		,1743,34,47,51,59,64,68,73,76,78,80
		,1749,32,46,50,58,63,67,73,75,77,80
		,1755,31,44,49,57,63,66,72,74,77,79
		,1801,30,43,48,56,62,65,71,73,76,78
		,1807,28,42,47,55,61,64,70,73,75,77
		,1813,27,41,46,55,60,63,69,72,74,76
		,1819,26,40,45,54,59,63,69,71,73,75
		,1825,24,39,44,53,58,62,68,70,72,74
		,1831,23,38,43,52,57,61,67,69,71,73
		,1837,21,37,42,51,57,60,66,69,70,72
		,1843,20,36,41,50,56,59,65,68,70,71
		,1849,19,34,39,49,55,58,65,67,69,70
		,1855,17,33,38,48,54,57,64,66,68,69
		,1901,16,32,37,47,53,57,63,65,67,68
		,1907,14,31,36,46,52,56,62,65,66,67
		,1913,13,30,35,45,51,55,62,64,65,67
		,1919,12,29,34,45,51,54,61,63,64,66
		,1925,10,28,33,44,50,53,60,62,63,65
		,1931,9,27,32,43,49,52,59,62,63,64
		,1937,8,26,31,42,48,51,58,61,62,63
		,1943,6,24,30,41,47,50,58,60,61,62
		,1949,5,23,29,40,46,50,57,59,60,61
		,1955,3,22,28,39,46,49,56,58,59,60
		,2001,2,21,26,38,45,48,55,58,58,59
		,2007,1,20,25,37,44,47,55,57,57,58
		,2013,0,19,24,36,43,46,54,56,57,57
		,2019,0,18,23,35,42,45,53,55,56,56
		,2025,0,17,22,35,41,44,52,55,55,55
		,2031,0,16,21,34,40,43,51,54,54,54
		,2037,0,14,20,33,40,43,51,53,53,53
		,2043,0,13,19,32,39,42,50,52,52,53
		,2049,0,12,18,31,38,41,49,51,51,52
		,2055,0,11,17,30,37,40,48,51,50,51
		,2101,0,10,16,29,36,39,47,50,50,50
		,2107,0,9,15,28,35,38,47,49,49,49
		,2113,0,8,14,27,34,37,46,48,48,48
		,2119,0,7,12,26,34,37,45,47,47,47
		,2125,0,6,11,25,33,36,44,47,46,46
		,2131,0,4,10,25,32,35,44,46,45,45
		,2137,0,3,9,24,31,34,43,45,44,44
		,2143,0,2,8,23,30,33,42,44,43,43
		,2149,0,1,7,22,29,32,41,44,43,42
		,2155,0,0,6,21,29,31,40,43,42,41
		,2201,0,0,5,20,28,30,40,42,41,40
		,2207,0,0,4,19,27,30,39,41,40,40
		,2213,0,0,3,18,26,29,38,40,39,39
		,2219,0,0,2,17,25,28,37,40,38,38
		,2225,0,0,1,16,24,27,36,39,37,37
		,2231,0,0,0,15,23,26,36,38,37,36
		,2237,0,0,0,15,23,25,35,37,36,35
		,2243,0,0,0,14,22,24,34,36,35,34
		,2249,0,0,0,13,21,23,33,36,34,33
		,2255,0,0,0,12,20,23,33,35,33,32
		,2301,0,0,0,11,19,22,32,34,32,31
		,2307,0,0,0,10,18,21,31,33,31,30
		,2313,0,0,0,9,17,20,30,33,30,29
		,2319,0,0,0,8,17,19,29,32,30,28
		,2325,0,0,0,7,16,18,29,31,29,27
		,2331,0,0,0,6,15,17,28,30,28,27
		,2337,0,0,0,5,14,17,27,29,27,26
		,2343,0,0,0,5,13,16,26,29,26,25
		,2349,0,0,0,4,12,15,25,28,25,24
		,2355,0,0,0,3,11,14,25,27,24,23
		,2401,0,0,0,2,11,13,24,26,23,22
		,2407,0,0,0,1,10,12,23,25,23,21
		,2413,0,0,0,0,9,11,22,25,22,20
		,2419,0,0,0,0,8,10,22,24,21,19
		,2425,0,0,0,0,7,10,21,23,20,18
		,2431,0,0,0,0,6,9,20,22,19,17
		,2437,0,0,0,0,6,8,19,22,18,16
		,2443,0,0,0,0,5,7,18,21,17,15
		,2449,0,0,0,0,4,6,18,20,17,14
		,2455,0,0,0,0,3,5,17,19,16,13
	};
	private static int[] pushupScoresFemale = {
		0,0,0,0,0,0,0,0,0,0,0
		,1,0,0,0,0,0,0,0,0,0,0
		,2,0,0,0,0,0,0,0,0,0,0
		,3,0,0,0,0,0,0,0,0,0,0
		,4,0,0,0,0,0,0,0,0,0,0
		,5,36,43,45,47,48,49,52,53,54,56
		,6,37,45,47,48,50,50,53,55,56,58
		,7,39,46,48,49,51,52,55,56,58,60
		,8,41,48,49,49,53,54,57,58,60,62
		,9,43,49,49,50,54,55,58,60,62,64
		,10,44,49,50,52,56,57,60,62,64,67
		,11,46,50,52,54,57,58,62,64,66,69
		,12,48,52,54,56,59,60,63,65,68,71
		,13,50,54,55,58,60,62,65,67,70,73
		,14,51,56,56,59,61,63,67,69,72,76
		,15,53,57,58,60,63,65,68,71,74,78
		,16,55,59,59,61,64,66,70,73,76,80
		,17,57,60,60,63,66,68,72,75,78,82
		,18,58,61,61,64,67,70,73,76,80,84
		,19,60,63,62,65,69,71,75,78,82,87
		,20,62,64,64,67,70,73,77,80,84,89
		,21,63,66,65,68,72,74,78,82,86,91
		,22,65,67,66,69,73,76,80,84,88,93
		,23,67,68,67,71,75,78,82,85,90,96
		,24,69,70,68,72,76,79,83,87,92,98
		,25,70,71,70,73,78,81,85,89,94,100
		,26,72,72,71,75,79,82,87,91,96,100
		,27,74,74,72,76,81,84,88,93,98,100
		,28,76,75,73,77,82,86,90,95,100,100
		,29,77,77,75,79,84,87,92,96,100,100
		,30,79,78,76,80,85,89,93,98,100,100
		,31,81,79,77,81,87,90,95,100,100,100
		,32,83,81,78,83,88,92,97,100,100,100
		,33,84,82,79,84,90,94,98,100,100,100
		,34,86,83,81,85,91,95,100,100,100,100
		,35,88,85,82,87,93,97,100,100,100,100
		,36,90,86,83,88,94,98,100,100,100,100
		,37,91,88,84,89,96,100,100,100,100,100
		,38,93,89,85,91,97,100,100,100,100,100
		,39,95,90,87,92,99,100,100,100,100,100
		,40,97,92,88,93,100,100,100,100,100,100
		,41,98,93,89,95,100,100,100,100,100,100
		,42,100,94,90,96,100,100,100,100,100,100
		,43,100,96,92,97,100,100,100,100,100,100
		,44,100,97,93,99,100,100,100,100,100,100
		,45,100,99,94,100,100,100,100,100,100,100
		,46,100,100,95,100,100,100,100,100,100,100
		,47,100,100,96,100,100,100,100,100,100,100
		,48,100,100,98,100,100,100,100,100,100,100
		,49,100,100,99,100,100,100,100,100,100,100
		,50,100,100,100,100,100,100,100,100,100,100
	};
	private static int[] situpScoresFemale = {
		0,0,0,0,0,0,0,0,0,0,0
		,1,0,0,0,0,0,0,0,0,0,0
		,2,0,0,0,0,0,0,0,0,0,0
		,3,0,0,0,0,0,0,0,0,0,0
		,4,0,0,0,0,0,0,0,0,0,0
		,5,0,0,0,0,0,0,0,0,0,0
		,6,0,0,0,0,0,0,0,0,0,0
		,7,0,0,0,0,0,0,0,0,0,0
		,8,0,0,0,0,0,0,0,0,0,0
		,9,0,0,0,0,0,0,0,0,0,0
		,10,0,0,0,0,0,0,0,0,0,0
		,11,0,0,0,0,0,0,0,0,0,0
		,12,0,0,0,0,0,0,0,0,0,0
		,13,0,0,0,0,0,0,0,0,0,0
		,14,0,0,0,0,0,0,0,0,0,0
		,15,0,0,0,0,0,0,0,0,0,0
		,16,0,0,0,0,0,0,0,0,0,0
		,17,0,0,0,0,0,0,0,0,0,0
		,18,0,0,0,0,0,0,0,0,0,0
		,19,0,0,0,0,0,0,0,0,0,0
		,20,0,0,0,0,0,0,0,0,0,0
		,21,9,21,34,35,42,49,50,53,54,55
		,22,10,23,35,36,43,50,51,54,55,56
		,23,12,24,36,38,44,51,52,55,56,57
		,24,14,25,37,39,45,52,53,56,57,58
		,25,15,27,38,40,46,53,54,57,58,59
		,26,17,28,39,41,47,54,56,58,59,60
		,27,18,29,41,42,48,55,57,59,60,61
		,28,20,31,42,44,49,56,58,60,61,62
		,29,22,32,43,45,50,57,59,61,62,63
		,30,23,33,44,46,52,58,60,62,63,64
		,31,25,35,45,47,53,59,61,63,64,65
		,32,26,36,46,48,54,60,62,64,65,66
		,33,28,37,47,49,55,61,63,65,66,68
		,34,30,39,48,50,56,62,64,66,68,69
		,35,31,40,49,52,57,63,66,67,69,70
		,36,33,41,50,53,58,64,67,68,70,71
		,37,34,43,51,54,59,65,68,69,71,72
		,38,36,44,52,55,60,66,69,71,72,73
		,39,38,45,54,56,61,67,70,72,73,74
		,40,39,47,55,58,62,68,71,73,74,75
		,41,41,48,56,59,63,69,72,74,75,76
		,42,42,49,57,60,64,70,73,75,76,77
		,43,44,50,58,61,65,71,74,76,77,78
		,44,46,52,59,62,66,72,76,77,78,79
		,45,47,53,60,64,67,73,77,78,79,81
		,46,49,55,61,65,68,74,78,79,81,82
		,47,50,56,62,66,69,75,79,80,82,83
		,48,52,57,63,67,71,76,80,81,83,84
		,49,54,59,64,68,72,77,81,82,84,85
		,50,55,60,65,69,73,78,82,83,85,86
		,51,57,61,66,71,74,79,83,84,86,87
		,52,58,63,68,72,75,80,84,85,87,88
		,53,60,64,69,73,76,81,86,86,88,89
		,54,62,65,70,74,77,82,87,87,89,90
		,55,63,67,71,75,78,83,88,88,90,91
		,56,65,68,72,76,79,84,89,89,91,92
		,57,66,69,73,78,80,85,90,91,92,94
		,58,68,71,74,79,81,86,91,92,94,95
		,59,70,72,75,80,82,87,92,93,95,96
		,60,71,73,76,81,83,88,93,94,96,97
		,61,73,75,77,82,84,89,94,95,97,98
		,62,74,76,78,84,85,90,96,96,98,99
		,63,76,77,79,85,86,91,97,97,99,100
		,64,78,79,81,86,87,92,98,98,100,100
		,65,79,80,82,87,88,93,99,99,100,100
		,66,81,81,83,88,89,94,100,100,100,100
		,67,82,83,84,89,91,95,100,100,100,100
		,68,84,84,85,91,92,96,100,100,100,100
		,69,86,85,86,92,93,97,100,100,100,100
		,70,87,87,87,93,94,98,100,100,100,100
		,71,89,88,88,94,95,99,100,100,100,100
		,72,90,89,89,95,96,100,100,100,100,100
		,73,92,91,90,96,97,100,100,100,100,100
		,74,94,92,91,98,98,100,100,100,100,100
		,75,95,93,92,99,99,100,100,100,100,100
		,76,97,95,94,100,100,100,100,100,100,100
		,77,98,96,95,100,100,100,100,100,100,100
		,78,100,97,96,100,100,100,100,100,100,100
		,79,100,99,97,100,100,100,100,100,100,100
		,80,100,100,98,100,100,100,100,100,100,100
		,81,100,100,99,100,100,100,100,100,100,100
		,82,100,100,100,100,100,100,100,100,100,100
	};
	public static int[] runtimeScoresFemale = {
		1300,100,100,100,100,100,100,100,100,100,100
		,1301,100,100,100,100,100,100,100,100,100,100
		,1307,100,100,100,100,100,100,100,100,100,100
		,1313,100,100,100,100,100,100,100,100,100,100
		,1319,100,100,100,100,100,100,100,100,100,100
		,1325,100,100,100,100,100,100,100,100,100,100
		,1331,100,100,100,100,100,100,100,100,100,100
		,1337,100,100,100,100,100,100,100,100,100,100
		,1343,100,100,100,100,100,100,100,100,100,100
		,1349,100,100,100,100,100,100,100,100,100,100
		,1355,100,100,100,100,100,100,100,100,100,100
		,1401,100,100,100,100,100,100,100,100,100,100
		,1407,100,100,100,100,100,100,100,100,100,100
		,1413,100,100,100,100,100,100,100,100,100,100
		,1419,100,100,100,100,100,100,100,100,100,100
		,1425,100,100,100,100,100,100,100,100,100,100
		,1431,100,100,100,100,100,100,100,100,100,100
		,1437,100,100,100,100,100,100,100,100,100,100
		,1443,100,100,100,100,100,100,100,100,100,100
		,1449,100,100,100,100,100,100,100,100,100,100
		,1455,100,100,100,100,100,100,100,100,100,100
		,1501,100,100,100,100,100,100,100,100,100,100
		,1507,100,100,100,100,100,100,100,100,100,100
		,1513,100,100,100,100,100,100,100,100,100,100
		,1519,100,100,100,100,100,100,100,100,100,100
		,1525,100,100,100,100,100,100,100,100,100,100
		,1531,100,100,100,100,100,100,100,100,100,100
		,1537,99,99,100,100,100,100,100,100,100,100
		,1543,98,98,100,100,100,100,100,100,100,100
		,1549,96,97,99,100,100,100,100,100,100,100
		,1555,95,96,98,99,100,100,100,100,100,100
		,1601,94,95,97,99,100,100,100,100,100,100
		,1607,93,94,97,98,100,100,100,100,100,100
		,1613,92,93,96,97,100,100,100,100,100,100
		,1619,90,92,95,97,100,100,100,100,100,100
		,1625,89,91,94,96,100,100,100,100,100,100
		,1631,88,90,93,95,100,100,100,100,100,100
		,1637,87,89,92,94,100,100,100,100,100,100
		,1643,85,88,91,94,100,100,100,100,100,100
		,1649,84,87,91,93,100,100,100,100,100,100
		,1655,83,86,90,92,100,100,100,100,100,100
		,1701,82,85,89,92,99,100,100,100,100,100
		,1707,81,84,88,91,99,100,100,100,100,100
		,1713,79,83,87,90,98,100,100,100,100,100
		,1719,78,82,86,90,97,100,100,100,100,100
		,1725,77,81,86,89,96,99,100,100,100,100
		,1731,76,80,85,88,96,99,100,100,100,100
		,1737,75,79,84,88,95,98,99,100,100,100
		,1743,73,78,83,87,94,97,99,100,100,100
		,1749,72,77,82,86,94,97,98,100,100,100
		,1755,71,76,81,86,93,96,97,100,100,100
		,1801,70,75,80,85,92,96,97,100,100,100
		,1807,68,74,80,84,92,95,96,100,100,100
		,1813,67,73,79,83,91,94,96,100,100,100
		,1819,66,72,78,83,90,94,95,100,100,100
		,1825,65,71,77,82,89,93,94,100,100,100
		,1831,64,70,76,81,89,92,94,100,100,100
		,1837,62,69,75,81,88,92,93,100,100,100
		,1843,61,68,74,80,87,91,92,100,100,100
		,1849,60,67,74,79,87,90,92,100,100,100
		,1855,59,66,73,79,86,90,91,100,100,100
		,1901,58,65,72,78,85,89,91,99,100,100
		,1907,56,64,71,77,85,89,90,99,100,100
		,1913,55,63,70,77,84,88,89,98,100,100
		,1919,54,62,69,76,83,87,89,97,100,100
		,1925,53,61,69,75,82,87,88,96,100,100
		,1931,52,60,68,74,82,86,87,96,100,100
		,1937,50,59,67,74,81,85,87,95,100,100
		,1943,49,58,66,73,80,85,86,94,99,100
		,1949,48,57,65,72,80,84,86,93,98,100
		,1955,47,56,64,72,79,83,85,93,98,100
		,2001,45,55,63,71,78,83,84,92,97,99
		,2007,44,54,63,70,78,82,84,91,96,98
		,2013,43,53,62,70,77,82,83,90,95,98
		,2019,42,52,61,69,76,81,82,90,95,97
		,2025,41,51,60,68,75,80,82,89,94,96
		,2031,39,50,59,68,75,80,81,88,93,95
		,2037,38,49,58,67,74,79,81,87,92,94
		,2043,37,48,57,66,73,78,80,87,91,94
		,2049,36,47,57,66,73,78,79,86,91,93
		,2055,35,46,56,65,72,77,79,85,90,92
		,2101,33,45,55,64,71,77,78,84,89,91
		,2107,32,44,54,63,71,76,77,84,88,90
		,2113,31,43,53,63,70,75,77,83,87,90
		,2119,30,42,52,62,69,75,76,82,87,89
		,2125,28,41,51,61,68,74,76,81,86,88
		,2131,27,40,51,61,68,73,75,81,85,87
		,2137,26,39,50,60,67,73,74,80,84,86
		,2143,25,38,49,59,66,72,74,79,84,86
		,2149,24,37,48,59,66,71,73,79,83,85
		,2155,22,36,47,58,65,71,72,78,82,84
		,2201,21,35,46,57,64,70,72,77,81,83
		,2207,20,34,46,57,64,70,71,76,80,82
		,2213,19,33,45,56,63,69,71,76,80,82
		,2219,18,32,44,55,62,68,70,75,79,81
		,2225,16,31,43,54,61,68,69,74,78,80
		,2231,15,30,42,54,61,67,69,73,77,79
		,2237,14,29,41,53,60,66,68,73,76,78
		,2243,13,28,40,52,59,66,67,72,76,78
		,2249,12,27,40,52,59,65,67,71,75,77
		,2255,10,26,39,51,58,64,66,70,74,76
		,2301,9,25,38,50,57,64,66,70,73,75
		,2307,8,24,37,49,56,63,65,69,73,74
		,2313,7,23,36,49,56,63,64,68,72,74
		,2319,5,22,35,48,55,62,64,67,71,73
		,2325,4,21,34,48,54,61,63,67,70,72
		,2331,3,20,34,47,54,61,62,66,69,71
		,2337,2,19,33,46,53,60,62,65,69,70
		,2343,1,18,32,46,52,59,61,64,68,70
		,2349,0,17,31,45,52,59,61,64,67,69
		,2355,0,16,30,44,51,58,60,63,66,68
		,2401,0,15,29,43,50,57,59,62,65,67
		,2407,0,14,29,43,49,57,59,61,65,66
		,2413,0,13,28,42,49,56,58,61,64,66
		,2419,0,12,27,41,48,56,57,60,63,65
		,2425,0,11,26,41,47,55,57,59,62,64
		,2431,0,10,25,40,47,54,56,59,62,63
		,2437,0,9,24,39,46,54,56,58,61,62
		,2443,0,8,23,39,45,53,55,57,60,62
		,2449,0,7,23,38,45,52,54,56,59,61
		,2455,0,6,22,37,44,52,54,56,58,60
	};
}
